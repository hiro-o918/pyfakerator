[project]
authors = [
  {name = "Hironori Yamamoto", email = "mr.nikoru918@gmail.com"},
]
description = "Add your description here"
name = "fauxgen"
readme = "README.md"
requires-python = ">=3.10"
version = "0.2.3"

[tool.uv]
package = true

[tool.maturin]
bindings = "bin"
exclude = [
  "fauxgen_core/resources/**/*",
]
manifest-path = "fauxgen-core/Cargo.toml"
python-source = "python"
strip = true

[build-system]
build-backend = "maturin"
requires = ["maturin>=1.0,<2.0"]

[dependency-groups]
dev = [
  "mypy>=1.15.0",
  "pytest>=8.3.5",
  "ruff>=0.11.2",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "fauxgen-core/resources/",
  "fauxgen-core/templates/",
  "**/testing/fauxgen",
]

# Same as Black.
indent-width = 4
line-length = 88

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = []
select = ["E4", "E7", "E9", "F", "I"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
exclude = [".venv/", "fauxgen-core/resources/", "examples/"]

check_untyped_defs = true
disallow_any_decorated = false
disallow_any_generics = false
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
ignore_errors = false
ignore_missing_imports = false
no_implicit_optional = true
no_implicit_reexport = true
python_version = "3.12"
show_error_codes = true
strict = true
strict_equality = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = [
  "tests",
]
